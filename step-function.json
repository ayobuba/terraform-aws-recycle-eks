{
  "Comment": "A open source module to taint/drain eks worker nodes gracefully",
  "StartAt": "Put node to standby",
  "States": {
     "Put node to standby": {
      "Comment": "Putting worker node to standby",
      "Type": "Task",
       "Resource": "${put-nodes-to-standby-lambda-arn}",
      "Next": "taint the node"
    },
    "taint the node": {
      "Comment": "Putting a unschedulable taint on the standby node",
      "Type": "Task",
      "Resource": "${taint-nodes-lambda-arn}",
      "Next": "Wait 100 sec"
    },
    "Wait 100 sec": {
      "Comment": "Putting a wait for 100 seconds",
      "Type": "Wait",
      "Seconds": 100,
      "Next": "Check for pods"
    },
    "Check for pods": {
      "Comment": "Checking for Running pods based on the label selector",
      "Type": "Task",
      "Resource": "${check-nodes-forrunning-pods-lambda-arn}",
      "Next": "All active pods gone?"
    },
    "All active pods gone?": {
      "Comment": "Checking for active pod count from last step, if it is 0 then terminate else wait",
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.activePodCount",
          "NumericEquals": 0,
          "Next": "Yes-Terminate the node"
        },
        {
          "Variable": "$.activePodCount",
          "NumericGreaterThan": 0,
          "Next": "No-Let's Wait"
        }
      ]
    },
    "Yes-Terminate the node": {
      "Type": "Pass",
      "Next": "Terminate the node"
    },
    "No-Let's Wait": {
      "Type": "Pass",
      "Next": "Wait 100 sec"
    },
    "Terminate the node": {
      "Type": "Task",
      "Resource": "${detach-and-terminate-node-lambda-arn}",
      "End": true
    }
  }
}